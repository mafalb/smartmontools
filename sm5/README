===============================================
SMARTMONTOOLS - SMART utility toolset for Linux
===============================================

== HOME ==
The home for smartmontools is located at:
    http://smartmontools.sourceforge.net
Please see this web site for updates, documentation, and for
submitting patches and bug reports.

You will find a mailing list for support and other questions at:
http://lists.sourceforge.net/lists/listinfo/smartmontools-support


== COPYING ==
Copyright (C) 2002 Bruce Allen <smartmontools-support@lists.sourceforge.net>

This program is free software; you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the Free
Software Foundation; either version 2, or (at your option) any later
version.

You should have received a copy of the GNU General Public License (for
example COPYING); if not, write to the Free Software Foundation, Inc., 675
Mass Ave, Cambridge, MA 02139, USA.


== CREDITS ==
This code was originally developed as a Senior Thesis by Michael Cornwell
at the Concurrent Systems Laboratory (now part of the Storage Systems
Research Center), Jack Baskin School of Engineering, University of
California, Santa Cruz. http://ssrc.soe.ucsc.edu/


== OVERVIEW ==
SMARTMONTOOLS contains utilities that control and monitor storage
devices using the Self-Monitoring, Analysis and Reporting Technology
(S.M.A.R.T.) system build into ATA and SCSI Hard Drives. This is used
to check the reliability of the hard drive and to predict drive
failures.  SMARTMONTOOLS Version 5.x is designed to comply to the
ATA/ATAPI-5 specification (Revision 1).  Future releases of
SMARTMONTOOLS (Versions 6.x and 7.x) will comply with the ATA/ATAPI-6
and ATA/ATAPI-7 specifications.

This package is meant to be an up-to-date replacement for the
ucsc-smartsuite and smartsuite packages, and is derived from that
code.


== CONTENTS ==
The suite contains two utilities:

smartctl is a command line utility designed to perform
         S.M.A.R.T. tasks.such as disk self-checks, and to
         report the S.M.A.R.T. status of the disk.

smartd   is a daemon that periodically monitors S.M.A.R.T. status and
         reports errors and changes in S.M.A.R.T. attributes to syslog.

SEE THE FILE "WARNINGS" FOR REPORTS OF HARDWARE WHERE THESE UTILITIES MIGHT
CAUSE SERIOUS PROBLEMS SUCH AS LOCKUPS.

If you have just downloaded smartmontools from the URL above, then
you can read about these commands using the man pages.  Within this
directory the commands:
  man ./smartctl.8
and
  man ./smartd.8

will display the manual pages for the two commands.  If you have
already installed the package on your system, then:
  man smartctl
and
  man smartd
will display the same information.


== INSTALLATION ==
To install, use the commands:
  make
  make install
The tools require Linux kernel 2.2.14 or greater in order to run. Any
recent Linux distribution should support this package.
 
Fourteen files are installed:
/usr/sbin/smartd                               [Executable daemon]
/usr/sbin/smartctl                             [Executable command-line utility]
/etc/rc.d/init.d/smartd                        [Init/Startup script for smartd]
/usr/share/man/man8/smartctl.8.gz              [Manual page]
/usr/share/man/man8/smartd.8.gz                [Manual page]
/usr/share/man/man5/smartd.conf.5.gz           [Manual page]
/usr/share/doc/smartmontools-5.0/README        [What you are reading!]
/usr/share/doc/smartmontools-5.0/TODO          [Things that need to be done/fixed]
/usr/share/doc/smartmontools-5.0/CHANGELOG     [A log of changes. Also see CVS]
/usr/share/doc/smartmontools-5.0/COPYING       [GNU Public License.] 
/usr/share/doc/smartmontools-5.0/VERSION       [Version number]
/usr/share/doc/smartmontools-5.0/WARNINGS      [Systems where lockups or other serious problems reported]
/usr/share/doc/smartmontools-5.0/smartd.conf   [Example Configuration file for /etc/]
/etc/smartd.conf.example                       [Example Configuration file for /etc/]

Source and binary RPM files are available at the website listed above.

PLEASE READ THE MANUAL PAGES FOR SMARTCTL AND SMARTD FOR MORE INFORMATION.


== PROPOSED OPTION NAMES FOR SMARTCTL ==
The following is a list of proposed options to replace the existing options in
smartctl.  If you have any comments or would like to suggest improvements then
please post to the smartmontools mailing list.

  -V, --version, --copyright, --license
        Show version, copyright, and license info then exit

  -q MODE, --quietmode=MODE
        Set the quiet mode to one of: errorsonly, silent

  -d TYPE, --devicetype=TYPE
        Set the device type to one of ata, scsi

  -T N, --tolerance=N
        Set tolerance level to one of:
                0 - Exit if any SMART command fails
                1 - Exit if a mandatory SMART command fails (default)
                2 - Continue even if a mandatory SMART command fails

  -k, --checksumfail
        Exit on bad checksum

  -s VALUE, --smart=VALUE
        Enable/disable SMART.  VALUE is one of: on, off 

  -o VALUE, --offline=VALUE
        Enable/disable automatic offline testing.  VALUE is one of: on, off 

  -S VALUE, --autosave=VALUE
        Enable/disable autosave.  VALUE is one of: on, off 

  -h, --showstatus
        Show SMART health status

  -c, --showcapabilities
        Show SMART capabilities

  -a, --showattributes
        Show SMART vendor attributes

  -l TYPE, --showlog=TYPE
        Show log: type is one of: error, selftest

  -i, --showinfo
        Show drive information

  -A, --showall
        Show all SMART information.  Equivalent to -hcai -l error -l selftest

  -v N,OPTION , --vendoroptions=N,OPTION
        Set vendor specific OPTION for attribute N.  Currently supported are:

                  N     OPTION          Effect
                -----------------------------------------------------------
                009     minutes         Display in minutes instead of hours

        Note that in the future this option may be used multiple times
        with different arguments, to modify options for different
        attributes.

  -t TEST, --test=TEST
        Perform TEST immediately.  TEST is one of offline, short, long

  -C, --captive
        When used with -t, performs test in captive mode.  Has no effect on
        offline test

  -X, --abort
        Abort any non-captive test

The following table shows the mapping of old options to new options:

  -----------------------------------------------------------------------
  Old option    New short option        New long option
  -----------------------------------------------------------------------
  -V            -V                      --version, --copyright, --license
  -i            -i                      --showinfo
  -q            -q errorsonly           --quietmode=errorsonly
  -Q            -q silent               --quietmode=silent
  -n            -d ata                  --devicetype=ata
  -N            -d scsi                 --devicetype=scsi
  -P            -T 2                    --tolerance=2
  -U            -T 0                    --tolerance=0
  -W            -k                      --checksumfail
  -e            -s on                   --smart=on
  -d            -s off                  --smart=off
  -t            -o on                   --offline=on
  -T            -o off                  --offline=off
  -f            -S on                   --autosave=on
  -F            -S off                  --autosave=off
  -c            -h                      --showstatus
  -g            -c                      --showcapabilities
  -v            -a                      --showattributes
  -l            -l error                --showlog=error
  -L            -l selftest             --showlog=selftest
  -a            -A                      --showall
  -m            -v 9,minutes            --vendoroptions=9,minutes
  -O            -t offline              --test=offline
  -S            -t short                --test=short
  -s            -Ct short               --test=short --captive
  -X            -t long                 --test=long
  -x            -Ct long                --test=long --captive
  -A            -X                      --abort
  -----------------------------------------------------------------------

